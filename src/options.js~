document.addEventListener('DOMContentLoaded', restoreOptions);
document.getElementById('options-form').addEventListener('submit', saveOptions);
document.getElementById('add-prompt').addEventListener('click', addPrompt);

function saveOptions(e) {
    e.preventDefault();
    const prompts = Array.from(document.querySelectorAll('.prompt-entry')).map(entry => {
        return {
            name: entry.querySelector('.prompt-name').value,
            prompt: entry.querySelector('.prompt-text').value
        };
    });

    browser.storage.local.set({
        'openAIKey': document.querySelector('#openai-key').value,
        'maxTokens': document.querySelector('#max-tokens').value,
        'temperature': document.querySelector('#temperature').value,
        prompts
    });
}

function restoreOptions() {
    // Use storage.local.get with an object to provide default values
    browser.storage.local.get({
        'openAIKey': '',
        'maxTokens': '150',
        'temperature': '0.7'
    }).then((res) => {
        // Set the values from storage or the default values if not found
        document.querySelector('#openai-key').value = res.openAIKey;
        document.querySelector('#max-tokens').value = res.maxTokens;
        document.querySelector('#temperature').value = res.temperature;
    }).catch((error) => {
        // Handle errors (e.g., log them)
        console.error('Error restoring options:', error);
    });
}

function addPrompt(prompt = {}) {
    const container = document.getElementById('prompts-container');
    const template = document.getElementById('prompt-template').content.cloneNode(true);
    template.querySelector('.prompt-name').value = prompt.name || '';
    template.querySelector('.prompt-text').value = prompt.prompt || '';
    template.querySelector('.remove-prompt').addEventListener('click', function() {
        this.closest('.prompt-entry').remove();
    });
    container.appendChild(template);
}

// Add initial prompt entry if none are stored
browser.storage.local.get('prompts').then((res) => {
    if (!res.prompts || res.prompts.length === 0) {
        addPrompt();
    }
});
